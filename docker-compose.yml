version: "3"
services:
  user:
    container_name: user-service
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    environment:
      - PORT=5001
    links:
      - broker

  # matching:
  #   container_name: matching-service
  #   build:
  #     context: ./services/matching-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "5002:5000"
  #   links:
  #     - broker

  question:
    container_name: question-service
    build:
      context: ./services/question-service
      dockerfile: Dockerfile
    ports:
      - "5003:5000"
    environment:
      - PORT=5003
    links:
      - broker

  # chat:
  #   container_name: chat-service
  #   build:
  #     context: ./services/chat-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "5004:5000"
  #   links:
  #     - broker

  # video-call:
  #   container_name: video-call-service
  #   build:
  #     context: ./services/video-call-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "5005:5000"
  #   links:
  #     - broker

  # client:
  #   container_name: client
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   ports:
  #     - "4000:4000"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
